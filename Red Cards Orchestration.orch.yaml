type: "orchestration"
version: "1.0"
pipeline:
  components:
    Start:
      type: "start"
      transitions:
        unconditional:
        - "Premier League"
      parameters:
        componentName: "Start"
    Premier League:
      type: "modular-api-extract-input-v1"
      transitions:
        success:
        - "Unpack JSON & Join Last Updated Date"
      parameters:
        componentName: "Premier League"
        inputId: "api-extract-input-v1"
        api-extract-input-v1:
          profile: "custom-a34da799-8276-401d-ad6a-0b52e9b243b7"
          endpoint: "Red Card Leaders"
          connectionRef:
            authType: "NONE"
          uriParams:
          queryParams:
          - name: "league"
            value: "39"
          - name: "season"
            value: "2022"
          headerParams:
          - name: "X-RapidAPI-Key"
            value: "ffcbe1c542msh9dc112366802618p1962a4jsnc0f8a1c434aa"
          - name: "X-RapidAPI-Host"
            value: "api-football-v1.p.rapidapi.com"
          postBody:
          pageLimit:
        outputId: "snowflake-output-connector-v0"
        snowflake-output-connector-v0:
          warehouse: "[Environment Default]"
          database: "[Environment Default]"
          schema: "[Environment Default]"
          tableName: "REDCARDS_SEMISTRUCTURED"
          createTableMode: "REPLACE_IF_EXISTS"
          cleanStagedFiles: "Yes"
          stagePlatform: "SNOWFLAKE"
          snowflake#internalStageType: "USER"
    Yesterday's Date:
      type: "python-pushdown"
      parameters:
        componentName: "Yesterday's Date"
        externalAccessIntegrations:
        packages:
        pythonScript: |
          from datetime import datetime, timedelta

          # Get today's date
          today = datetime.now()

          # Calculate yesterday's date
          yesterday = today - timedelta(days=1)

          # Format yesterday's date
          formatted_yesterday = yesterday.strftime('%Y-%m-%d %H:%M:%S.%f')[:-3]

          print(formatted_yesterday)

          context.updateVariable('proj_yest_date', formatted_yesterday)
          # Updating a grid variable:
          #   context.updateGridVariable('mygridvar',[['list','of'],['lists','!']])
          ###)
        scriptTimeout: "360"
    Unpack JSON & Join Last Updated Date:
      type: "run-transformation"
      transitions:
        success:
        - "Grid Iterator"
      parameters:
        componentName: "Unpack JSON & Join Last Updated Date"
        transformationJob: "Red Cards Transformation"
        setScalarVariables:
        - - "xform_yestdate"
          - "${orch_yestdate}"
        setGridVariables:
    Get Players Data:
      type: "modular-api-extract-input-v1"
      parameters:
        componentName: "Get Players Data"
        inputId: "api-extract-input-v1"
        api-extract-input-v1:
          profile: "custom-a34da799-8276-401d-ad6a-0b52e9b243b7"
          endpoint: "Search Player"
          connectionRef:
            authType:
            overrides: {}
          uriParams:
          queryParams:
          headerParams:
          postBody:
          pageLimit:
        outputId:
    dbt debug:
      type: "commands-for-dbt-core"
      parameters:
        componentName: "dbt debug"
        command: "${pv_dbt_command}"
        config:
        mapDbtEnvironmentVariables:
        - - "target_database"
          - "ANALYTICS"
        - - "target_schema"
          - "PUBLIC"
        dbtUrl: "https://github.com/MatillionPartnerEngineering/dbt_matillion_repo.git"
        branch: "main"
        gitFolderPath:
        userName: "MatillionPartnerEngineering"
        gitPassword: "kg_github_matillionpartnerengineering"
        profileConfig:
    dbt deps:
      type: "commands-for-dbt-core"
      parameters:
        componentName: "dbt deps"
        command: "dbt deps"
        config:
        mapDbtEnvironmentVariables:
        - - "target_database"
          - "ANALYTICS"
        - - "target_schema"
          - "PUBLIC"
        dbtUrl: "https://github.com/MatillionPartnerEngineering/dbt_matillion_repo.git"
        branch: "main"
        gitFolderPath:
        userName: "MatillionPartnerEngineering"
        gitPassword: "kg_github_matillionpartnerengineering"
        profileConfig:
    Grid Iterator:
      type: "grid-iterator"
      iterationTarget: "dbt debug"
      parameters:
        componentName: "Grid Iterator"
        gridVariable: "gv_dbt_commands"
        gridIteratorVariableMapping:
        - - "gvc_dbt_commands"
          - "pv_dbt_command"
        breakOnFailure: "No"
        concurrency: "Sequential"
  variables:
    orch_yestdate:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: "2024-02-19"
    pv_dbt_command:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: "DEFAULT pv_dbt_command"
    gv_dbt_commands:
      metadata:
        type: "GRID"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
        columns:
          gvc_dbt_commands:
            columnType: "TEXT"
      defaultValue:
      - - "dbt debug"
      - - "dbt source freshness"
      - - "dbt build"
design:
  components:
    Start:
      position:
        x: -10
        "y": 0
      tempMetlId: 1
    Premier League:
      position:
        x: 140
        "y": 0
      tempMetlId: 2
    Yesterday's Date:
      position:
        x: 280
        "y": -180
      tempMetlId: 3
    Unpack JSON & Join Last Updated Date:
      position:
        x: 300
        "y": 0
      tempMetlId: 5
    Get Players Data:
      position:
        x: 600
        "y": -170
      tempMetlId: 7
    dbt debug:
      position:
        x: 470
        "y": -10
      tempMetlId: 8
    dbt deps:
      position:
        x: 820
        "y": -180
      tempMetlId: 10
    Grid Iterator:
      position:
        x: 470
        "y": -10
      tempMetlId: 12
  notes:
    "1":
      position:
        x: 470
        "y": -260
      size:
        height: 158
        width: 300
      theme: "white"
      content: "Once Query Result to Grid exists, can query for player IDs, feed as\
        \ query params in API calls"
    "2":
      position:
        x: 770
        "y": -260
      size:
        height: 158
        width: 230
      theme: "white"
      content: "Can't currently install packages"
    "3":
      position:
        x: 160
        "y": -260
      size:
        height: 158
        width: 300
      theme: "white"
      content: "Once bug is set to allow values to carry to child jobs this can be\
        \ used."
